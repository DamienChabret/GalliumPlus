<Application x:Class="Gallium_v1.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Gallium_v1"
             StartupUri="Vue/ConnexionFenetre.xaml">

    <Application.Resources>

        <!-- Watermark pour connexion -->
        <Style x:Key="WaterMarkTextBox" TargetType="TextBox" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border Background="White" BorderBrush="DodgerBlue" BorderThickness="1" CornerRadius="3" />
                            <ScrollViewer x:Name="PART_ContentHost" Margin="2,0,0,0" VerticalAlignment="Center" />
                            <Label x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" Visibility="Collapsed" Foreground="Gray" FontSize="15"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!-- Boutons de connexion -->
        <Style TargetType="Button" x:Key="BoutonConnexion">
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="White" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="5" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" />
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <!-- Boutons original  -->
        <Style TargetType="Button" x:Key="boutonAcompteStock">
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="White" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="5" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Black"/>
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Foreground" Value="Orange" />
                </Trigger>
            </Style.Triggers>

        </Style>


        <!-- Bouton de l'écran principale -->
        <Style TargetType="Button" x:Key="BoutonEcranprincipale">
            <Setter Property="Foreground" Value="#F2F1F0" />
            <Setter Property="Background" Value="#F6711A" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Height" Value="35" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" />
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F2F1F0" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#F2F1F0" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
            
         </Style>

        <!-- Bouton autre -->
        <Style TargetType="Button" x:Key="BoutonModif">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="#F2F1F0" />
            <Setter Property="Height" Value="25" />

            <!-- Modification -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" CornerRadius="15" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="Black"  />
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Conditions -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray" />

                </Trigger>
            </Style.Triggers>
            
        </Style>
        

    </Application.Resources>
</Application>
